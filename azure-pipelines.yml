# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:

- task: TerraformInstaller@0
  displayName: 'TF_Install'
  inputs:
    terraformVersion: 'latest'
- task: TerraformTaskV3@3
  displayName: 'TF_Init'
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: 'S2-SPN-DevOps001'
    backendAzureRmResourceGroupName: 'S2-RG-DevOps42'
    backendAzureRmStorageAccountName: 's2storageaccountdevops42'
    backendAzureRmContainerName: 's2containerdevops42'
    backendAzureRmKey: 'DevOps001-main.tf'
- task: AzureKeyVault@2
  inputs:
    azureSubscription: 'S2-SPN-DevOps001'
    KeyVaultName: 'S2-Keyvault42'
    SecretsFilter: '*'
    RunAsPreJob: true
- task: TerraformTaskV3@3
  displayName: 'TF_Validate'
  inputs:
    provider: 'azurerm'
    command: 'validate'

- task: TerraformTaskV3@3
  displayName: 'TF_Plan'
  inputs:
    provider: 'azurerm'
    command: 'plan'
    environmentServiceNameAzureRM: 'S2-SPN-DevOps001'

- task: TerraformTaskV3@3
  displayName: 'TF_Provision'
  inputs:
    provider: 'azurerm'
    command: 'apply'
    environmentServiceNameAzureRM: 'S2-SPN-DevOps001'